variables:
  RULE_CHANGES_path: "**/*"
  AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID 
  AWS_SECRET_ACCES_KEY: $AWS_SECRET_ACCESS_KEY
  AWS_S3_URL: $AWS_S3_URL

stages:
  - build
  - test
  - deploy

.base-rules:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push"'
      changes:
        - $RULES_CHANGES_PATH
    - when: manual
      allow_failure: true

.frontend:
  extends: .base-rules
  variables:
    RULES_CHANGES_PATH: "frontEnd/**/*"

.backend:
  extends: .base-rules
  variables:
    RULES_CHANGES_PATH: "backEnd/**/*"

frontend-build:
  image: node:16.14.2-alpine
  stage: build
  extends: .frontend
  needs: []
  script:
    - echo "Building Front..."
    - cd frontEnd
    - npm install
    - CI=false npm run build
    - echo "Compile Complete!!!"
  artifacts:
    paths:
    - frontEnd/build

backend-build:
  image: maven:latest
  stage: build
  extends: .backend
  needs: []
  script:
    - echo "Building Backend..."
    - cd backEnd
    - mvn clean package -DskipTests -U
  artifacts:
    paths:
    - backEnd/target/*.jar

frontend-test: 
  stage: test 
  extends: .frontend  
  needs: ["frontend-build"]
  script:
    - echo "Test of Frontend..."
  artifacts:
    paths:
    - frontEnd/build

backend-test: 
  stage: test 
  extends: .backend  
  needs: ["backend-build"]
  script:
    - echo "Test of Backend..."
  artifacts:
    paths:
    - backEnd/target/*.jar

frontend-deploy: 
  image: python:latest
  stage: deploy
  extends: .frontend
  needs: ["frontend-test"]
  script:
    - echo "Deploying into FrontEnd..."
    - pip install awscli
    - aws configure set aws_acces_key_id $AWS_ACCESS_KEY_ID
    - aws configure set aws_secret_acces_key $AWS_SECRET_ACCESS_KEY
    - aws s3 sync frontEnd/build/ s3://0521ptc2n2-grupo1-frontend --delete

backend-deploy: 
  stage: deploy 
  extends: .backend  
  needs: ["backend-test"]
  before_script:
    - 'command -v ssh-agent >/dev/null || (apk add --update openssh )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh				
    - chmod 700 ~/.ssh
    - ssh-keyscan $EC2_IPADDRESS >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - scp -o StrictHostKeyChecking=no backEnd/target/backend-_Cars.jar ubuntu@18.224.213.7:/home/ubuntu/
    - ssh -o StrictHostKeyChecking=no ubuntu@18.224.213.7 "/home/ubuntu/scripts/shutdown.sh;/home/ubuntu/scripts/startup.sh"